version: "3.4"

services:
  postgresql:
    image: postgres:9.6
    env_file:
      - "env.d/development"
    ports:
      - "5440:5432"

  elasticsearch:
    image: fundocker/openshift-elasticsearch:6.6.2
    env_file:
      - "env.d/development"
    ports:
      - "9220:9200"

  app:
    build:
      context: .
      target: development
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    image: "funmooc:development"
    env_file: "env.d/development"
    ports:
      - "8080:8000"
    volumes:
      - ./src/backend:/app
      - ./data/static:/data/static
      - ./data/media:/data/media
    depends_on:
      - "postgresql"
      - "elasticsearch"

  app-ci:
    build:
      context: .
      target: production
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    # We tag our images with the current commit sha1 in the CI to make them
    # unique and avoid collisions in parallel builds.
    image: "funmooc:${CIRCLE_SHA1:-ci}"
    env_file:
      - env.d/development
      - env.d/ci
    ports:
      - "8000:8000"
    depends_on:
      - "postgresql"
      - "elasticsearch"

  node:
    image: circleci/node:10
    working_dir: /app/src/frontend
    user: "${DOCKER_USER:-1000}"
    volumes:
      - .:/app

  terraform:
    image: hashicorp/terraform:light
    env_file: env.d/aws
    user: "${DOCKER_USER:-1000}"
    working_dir: /app
    volumes:
      - ./src/aws:/app

  # Openedx stack (required for SSO testing)
  mysql:
    image: mysql:5.6
    env_file: env.d/lms
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci

  mongodb:
    image: mongo:3.2
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger

  memcached:
    image: memcached:1.4

  redis:
    image: redis:4.0

  mailcatcher:
    image: sj26/mailcatcher:latest
    ports:
      - "1080:1080"

  lms:
    image: fundocker/edxapp:hawthorn.1-oee-2.9.1
    env_file: env.d/lms
    ports:
      - "8073:8073"
    volumes:
      - ./data/edx/media:/edx/var/edxapp/media
      - ./data/edx/static:/edx/app/edxapp/staticfiles
      - ./data/edx/data:/edx/app/edxapp/data
      - ./docker/files/config/lms/docker_run_development.py:/config/lms/docker_run_development.py
      - ./docker/files/usr/local/bin/create_oauth_client:/usr/local/bin/create_oauth_client
    command:
      python manage.py lms runserver 0.0.0.0:8073 --settings=fun.docker_run_development
    user: ${DOCKER_USER:-1000}
    depends_on:
      - "mailcatcher"
      - "mysql"
      - "mongodb"
      - "memcached"
      - "redis"

  dockerize:
    image: jwilder/dockerize
