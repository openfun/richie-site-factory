version: "3.4"

services:
  db:
    image: postgres:9.6
    env_file:
      - "env.d/development"
    ports:
      - "5440:5432"

  elasticsearch:
    image: fundocker/openshift-elasticsearch:6.6.2
    env_file:
      - "env.d/development"
    ports:
      - "9220:9200"

  app-dev:
    build:
      context: .
      target: development
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    image: "funmooc:development"
    env_file: "env.d/development"
    ports:
      - "8080:8000"
    volumes:
      - ./src/backend:/app
      - ./data/media:/data/media
    depends_on:
      - "db"
      - "elasticsearch"
    user: ${DOCKER_USER:-1000}

  app:
    build:
      context: .
      target: production
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    # We tag our images with the current commit sha1 in the CI to make them
    # unique and avoid collisions in parallel builds.
    image: "funmooc:production"
    env_file:
      - env.d/production
    ports:
      - "8000:8000"
    volumes:
      - ./data/media:/data/media
    depends_on:
      - "db"
      - "elasticsearch"
    user: ${DOCKER_USER:-1000}

  nginx:
    build:
      context: .
      target: nginx
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
        NGINX_IMAGE_NAME: ${NGINX_IMAGE_NAME:-fundocker/openshift-nginx}
        NGINX_IMAGE_TAG: ${NGINX_IMAGE_TAG:-1.13}
    image: "funmooc-nginx:production"
    ports:
      - "8081:8081"
    volumes:
      - ./docker/files/etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./data/media:/data/media:ro
    depends_on:
      - app

  dockerize:
    image: jwilder/dockerize

  node:
    image: circleci/node:10
    working_dir: /app/src/frontend
    user: "${DOCKER_USER:-1000}"
    volumes:
      - .:/app

  terraform:
    image: hashicorp/terraform:light
    env_file: env.d/aws
    user: "${DOCKER_USER:-1000}"
    working_dir: /app
    volumes:
      - ./src/aws:/app
